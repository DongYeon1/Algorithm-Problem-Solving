4번 팰린드롬

홀수개인 경우와 짝수개인 경우가 있음

i는 전체길이의 중간지점까지만 탐색

1-1. 짝수일 경우를 대비
0부터 i번째 와 i+1번째부터 2i+1번째까지 비교
뒤에꺼를  reverse 해서 각 원소를 비교후 다 맞으면 2n이 최대인지 확인 후 저장
1-2. 홀수일 경우를 대비
0부터 i번째와 i+2번째부터 2i+2번재까지 비교
뒤에꺼를  reverse 해서 각 원소를 비교후 다 맞으면 2n+1이 최대인지 확인 후 저장

2. 전체 리스트를 reverse 후 1번과정을 다시 거침

3. 리턴

-----------------------------------구현 코드

from array import array

def find_palin(s):
    
    answer = 0
    
    first = ""
    second = ""
    
    for i in range((len(s)//2)-1): #n이 짝수일때
        
        first = s[0:i+1]
        second = s[i+1:2*i+2]
        re_second = second[::-1]
        if first == re_second:
            if answer < 2*(i+1):
                answer = 2*(i+1)
                
    for i in range((len(s)//2)): #n이 홀수일때
        
        first = s[0:i+1]
        second = s[i+2:2*i+3]
        re_second = second[::-1]
        if first == re_second:
            if answer < 2*(i+1)+1:
                answer = 2*(i+1)+1
    
    if len(s) == 1:
        answer = 1
    elif len(s) == 2:
        if s[0] == s[1]:
            answer = 2
                
    return answer

def solution(s):
    
    answer = find_palin(s)
    
    re_s = s[::-1]
    
    re_answer = find_palin(re_s)
    
    if re_answer > answer:
        answer = re_answer    

    
    return answer



------------------------피드백

[::-1]
앞에서부터 순차 탐색이어서 중간 부분 
팰린드롬 판별이 불가한 아이디어

--------------------------아이디어 폐기 후 재설계

리스트 원소별 각 사이를 기준으로
분류 및 팰린드롬 검출 아이디어
중간에 껴있어서 양쪽으로 같은경우와
완전히 데칼코마니 형식의 팰린드롬 
2가지 경우가 있음

데칼코마니 형식

1. 스트링을 리스트로 변환

2. for 문 iter 가 0,1 사이 1,2 사이 2,3 사이 를
순회하여 n-2,n-1 까지 순회한다고 생각

3-1. iter 가 n//2 보다 작거나 같은 경우는 왼쪽이 더 작은 크기의 리스트인 경우
iter 기준으로 왼쪽 오른쪽 리스트 자르기
오른쪽리스트 길이 - 왼쪽리스트 길이 만큼
오른쪽 리스트 마지막 원소들 삭제

3-2. iter 가 n//2 보다 큰 경우는오른쪽이 더 작은 크기의 리스트인 경우
iter 기준으로 왼쪽 오른쪽 리스트 자르기
왼쪽리스트 길이 - 오른쪽리스트 길이 만큼
왼쪽 리스트 첫번째 원소들 삭제

4. 두 리스트 0번째부터 비교 후 같지 않을때까지 cnt ++
만약 cnt 가 현재 answer 보다 클 경우 
answer = cnt*2

중간에 껴있는 경우 형식

1. 스트링을 리스트로 변환

2. for 문 iter 가 0,1 사이 1,2 사이 2,3 사이 를
순회하여 n-2,n-1 까지 순회한다고 생각

3-1. iter 가 n//2 -1 보다 작거나 같은 경우는 왼쪽이 더 작은 크기의 리스트인 경우
iter 기준으로 왼쪽 오른쪽+1 리스트 자르기
오른쪽리스트 길이 - 왼쪽리스트 길이 만큼
오른쪽 리스트 마지막 원소들 삭제

3-2. iter 가 n//2 -1 보다 큰 경우는 오른쪽이 더 작거나 같은 크기의 리스트인 경우
iter 기준으로 왼쪽 오른쪽+1 리스트 자르기
왼쪽리스트 길이 - 오른쪽리스트 길이 만큼
왼쪽 리스트 첫번째 원소들 삭제

4. 두 리스트 0번째부터 비교 후 같지 않을때까지 cnt ++
만약 cnt 가 현재 a
answer 보다 클 경우 
answer = cnt*2 + 1
----------------------------------재설계 후 코드 구현


from array import array

def solution(s):
    
    answer = 0 
    
    if len(s) == 1:
        answer = 1
        return answer
    elif len(s) == 2:
        if s[0] == s[1]:
            answer = 2
            return answer
        else:
            answer = 1
            return answer
            
    s_list = list(s)
    
    for iter in range(1,len(s_list)): #데칼코마니 형식
        
        if iter <= len(s_list)//2 : #왼쪽이 더 작은 리스트
            left = s_list[:iter]
            right = s_list[iter:]
            diff = len(right)-len(left)
            right = right[:len(right)-diff]
        else: #오른쪽이 더 작은 리스트
            left = s_list[:iter]
            right = s_list[iter:]
            diff = len(left)-len(right)
            left = left[diff:]
            
        left.reverse()
        
        assert len(left)==len(right)
        
        cnt = 0
        
        i = 0
        while i < len(left) and left[i] == right[i]:
            cnt += 1
            i += 1
        
        if cnt*2 > answer:
            answer = cnt*2
                
                
    for iter in range(1,len(s_list)): #중간에 낀 경우
        
        if iter <= len(s_list)//2 - 1: #왼쪽이 더 작은 리스트
            left = s_list[:iter]
            right = s_list[iter+1:]
            diff = len(right)-len(left)
            right = right[:len(right)-diff]
        else: #오른쪽이 더 작은 리스트
            left = s_list[:iter]
            right = s_list[iter+1:]
            diff = len(left)-len(right)
            left = left[diff:]
            
        left.reverse()
        
        assert len(left)==len(right)

        cnt = 0
        
        i = 0
        while i < len(left) and left[i] == right[i]:
            cnt += 1
            i += 1
                
        if cnt*2 + 1 > answer:
            answer = cnt*2 + 1
    
    return answer



------------------------------------------

일반 스트링은 list(s) 를 통해서 리스트로 만들 수 있다.

split 을 활용해서 공백기준 나눠져 있는 string 을 list 로 변환할 수 있다.

팰린드롬의 다양한 조건들 설계 잘하기
